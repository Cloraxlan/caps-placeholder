{"version":3,"sources":["app/hooks.ts","Interfaces-Classes/Recipe.ts","features/recipeSearch/calendarSlice.ts","components/Navigation/NavItems/NavItem/NavItem.tsx","components/Navigation/NavItems/NavItems.tsx","components/Navigation/Toolbar/Toolbar.tsx","components/Layout/Layout.tsx","features/login/loginSlice.ts","components/UI/Button/Button.tsx","components/Login.tsx","components/refreshTokenSetup.ts","components/Logout.tsx","components/LoginPage/LoginPage.tsx","features/recipeSearch/SearchQuery.ts","features/recipeSearch/SearchBox.tsx","features/recipeSearch/SaveRecipe.tsx","features/recipeSearch/Search.tsx","Interfaces-Classes/Day.ts","components/UI/Card/Card.tsx","components/Calendar/CalendarDay.tsx","components/Calendar/MonthsFilter/MonthsFilter.tsx","components/Calendar/Calendar.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","Recipe","name","description","ingridents","_name","_description","_ingredientList","this","ingredientList","initialState","recipeDates","date","Date","recipe","calendarSlice","createSlice","reducers","addRecipeDate","state","action","console","log","payload","push","actions","selectRecipeDates","calendar","NavItem","props","className","active","undefined","to","link","children","navItemsStyling","margin","padding","listStyle","display","alignItems","height","NavItems","calendarState","style","document","location","pathname","Toolbar","Fragment","childrenStyle","marginTop","Layout","loginSlice","setProfile","profile","setLogout","selectLogin","login","Button","type","onClick","LoginHooks","dispatch","useGoogleLogin","onSuccess","res","profileObj","refreshTiming","tokenObj","expires_in","refreshToken","a","reloadAuthResponse","newAuthRes","id_token","setTimeout","refreshTokenSetup","clientId","isSignedIn","accessType","signIn","LogoutHooks","signOut","useGoogleLogout","onLogoutSuccess","onFailure","LoginPage","selector","useState","status","setStatus","useEffect","substring","indexOf","getFirstName","Login","Logout","SearchQuery","query","_searchString","searchString","toLowerCase","recipes","results","map","ingredientIncludes","ingredient","includes","SearchBox","searchBox","useRef","getSearchValue","clear","r","current","value","search","searchQ","setResults","basicSearch","onKeyDown","e","key","ref","SaveRecipe","calendarr","month","prompt","day","serialize","flexDirection","Search","result","convertToDays","days","recipeDate","found","i","length","toDateString","events","note","Card","classes","CalendarDay","overlayShown","setOverlayShown","getDate","event","renderOverlay","MonthsFilter","onChange","onFilterMonth","target","defaultValue","getMonth","toString","autoFocus","year","getFullYear","MONTHS","MONTHSIZE","testLeapYear","MONTH","Calendar","setMonth","recipeDateList","selectedMonth","span","id","checkDay","find","d","genDayObj","genEmptyDayObj","dayObjArr","refDate","setDate","j","getDay","overflowDate","testDate","dayObj","weeks","o","slice","finalWeek","finalElement","fill","generateRows","row","uuidv4","App","justifyContent","path","component","store","configureStore","reducer","loginReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.74558f64.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","export interface serialRecipe {\r\n\tname: string;\r\n\tdescription: string;\r\n\tingredientList: Array<string>;\r\n}\r\nexport default class Recipe {\r\n\tprivate _name: string;\r\n\tprivate _description: string;\r\n\t//Only a string for now to be kept simple, will later be expanded into new class\r\n\tprivate _ingredientList: Array<string>;\r\n\tconstructor(name: string, description: string, ingridents: Array<string>) {\r\n\t\tthis._name = name;\r\n\t\tthis._description = description;\r\n\t\tthis._ingredientList = ingridents;\r\n\t}\r\n\tpublic get name() {\r\n\t\treturn this._name;\r\n\t}\r\n\tpublic get description() {\r\n\t\treturn this._description;\r\n\t}\r\n\tpublic get ingredientList() {\r\n\t\treturn this._ingredientList;\r\n\t}\r\n\tpublic serialize(): serialRecipe {\r\n\t\treturn {\r\n\t\t\tname: this._name,\r\n\t\t\tdescription: this._description,\r\n\t\t\tingredientList: this._ingredientList,\r\n\t\t};\r\n\t}\r\n}\r\n","import { createSlice, PayloadAction, Slice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport Recipe from \"../../Interfaces-Classes/Recipe\";\r\n\r\nexport interface RecipeDate {\r\n\trecipe: Recipe;\r\n\tdate: Date;\r\n}\r\nexport interface CalendarState {\r\n\trecipeDates: Array<RecipeDate>;\r\n}\r\nconst initialState: CalendarState = {\r\n\trecipeDates: [\r\n\t\t{\r\n\t\t\tdate: new Date(\"January 01, 2021 00:00:00\"),\r\n\t\t\trecipe: new Recipe(\"yum\", \"pie\", [\"yes\", \"cades blood\"]),\r\n\t\t},\r\n\t\t{\r\n\t\t\tdate: new Date(\"January 03, 2021 00:00:00\"),\r\n\t\t\trecipe: new Recipe(\"yum2\", \"pie\", [\"yes\", \"price discrimination\"]),\r\n\t\t},\r\n\t],\r\n};\r\nexport const calendarSlice: Slice = createSlice({\r\n\tname: \"calendar\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\taddRecipeDate: (state: any, action: PayloadAction<RecipeDate>) => {\r\n\t\t\tconsole.log(action.payload);\r\n\t\t\tstate.recipeDates.push(action.payload);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addRecipeDate } = calendarSlice.actions;\r\nexport const selectRecipeDates = (state: RootState) =>\r\n\tstate.calendar.recipeDates;\r\n\r\nexport default calendarSlice.reducer;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./NavItem.css\";\r\n\r\nconst NavItem = (props: {\r\n\tlink: any;\r\n\tactive: any;\r\n\tchildren:\r\n\t\t| boolean\r\n\t\t| React.ReactChild\r\n\t\t| React.ReactFragment\r\n\t\t| React.ReactPortal\r\n\t\t| null\r\n\t\t| undefined;\r\n}) => (\r\n\t<li className=\"NavItem\">\r\n\t\t{console.log(props.active)}\r\n\r\n\t\t<div className={props.active ? \"active\" : undefined}>\r\n\t\t\t<Link to={props.link}>{props.children}</Link>\r\n\t\t</div>\r\n\t</li>\r\n);\r\n\r\nexport default NavItem;\r\n","import { CSSProperties } from \"react\";\r\nimport { useAppSelector } from \"../../../app/hooks\";\r\nimport { selectRecipeDates } from \"../../../features/recipeSearch/calendarSlice\";\r\nimport NavItem from \"./NavItem/NavItem\";\r\nconst navItemsStyling: CSSProperties = {\r\n\tmargin: \"0\",\r\n\tpadding: \"0\",\r\n\tlistStyle: \"none\",\r\n\tdisplay: \"flex\",\r\n\talignItems: \"center\",\r\n\theight: \"100%\",\r\n};\r\n\r\nconst NavItems = () => {\r\n\tlet calendarState = useAppSelector(selectRecipeDates);\r\n\r\n\treturn (\r\n\t\t<ul style={navItemsStyling}>\r\n\t\t\t<NavItem link=\"/\" active={document.location.pathname === \"/\"}>\r\n\t\t\t\tHome\r\n\t\t\t</NavItem>\r\n\t\t\t<NavItem\r\n\t\t\t\tlink=\"/LoginPage\"\r\n\t\t\t\tactive={document.location.pathname === \"/LoginPage\"}\r\n\t\t\t>\r\n\t\t\t\tLogin Page\r\n\t\t\t</NavItem>\r\n\t\t\t<NavItem link=\"/Search\" active={document.location.pathname === \"/Search\"}>\r\n\t\t\t\tRecipe Search\r\n\t\t\t</NavItem>\r\n\t\t\t<NavItem\r\n\t\t\t\tlink={{ pathname: \"/Calendar\", state: { calendarState } }}\r\n\t\t\t\tactive={document.location.pathname === \"/Calendar\"}\r\n\t\t\t>\r\n\t\t\t\tCalendar\r\n\t\t\t</NavItem>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default NavItems;\r\n","import React from \"react\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport \"./Toolbar.css\";\r\n\r\nconst Toolbar = () => (\r\n\t<React.Fragment>\r\n\t\t<style>\r\n\t\t\t@import\r\n\t\t\turl('https://fonts.googleapis.com/css2?family=IBM+Plex+Serif:wght@300&display=swap');\r\n\t\t</style>\r\n\t\t<header className=\"Toolbar\">\r\n\t\t\t<div>CAPS-PLACEHOLDER</div>\r\n\t\t\t<nav>\r\n\t\t\t\t<NavItems />\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default Toolbar;\r\n","import React, { CSSProperties } from \"react\";\r\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\r\n\r\nconst childrenStyle: CSSProperties = {\r\n\tmarginTop: \"72px\",\r\n};\r\n\r\nconst Layout = (props: {\r\n\tchildren:\r\n\t\t| boolean\r\n\t\t| React.ReactChild\r\n\t\t| React.ReactFragment\r\n\t\t| React.ReactPortal\r\n\t\t| null\r\n\t\t| undefined;\r\n}) => (\r\n\t<React.Fragment>\r\n\t\t<Toolbar />\r\n\t\t<main style={childrenStyle}>{props.children}</main>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default Layout;\r\n","import { createSlice, PayloadAction, Slice } from \"@reduxjs/toolkit\";\r\nimport { GoogleLoginResponse } from \"react-google-login\";\r\nimport { RootState } from \"../../app/store\";\r\nexport interface LoginState {\r\n\tprofile: GoogleLoginResponse | null;\r\n}\r\nconst initialState: any = {};\r\nexport const loginSlice: Slice = createSlice({\r\n\tname: \"login\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetProfile: (\r\n\t\t\tstate: LoginState,\r\n\t\t\taction: PayloadAction<GoogleLoginResponse>,\r\n\t\t) => {\r\n\t\t\tstate.profile = action.payload;\r\n\t\t},\r\n\t\tsetLogout: (state: LoginState) => {\r\n\t\t\tstate.profile = null;\r\n\t\t\tconsole.log(state.profile + \"oi\");\r\n\t\t},\r\n\t},\r\n});\r\nexport const selectLogin = (state: RootState) => state.login;\r\n\r\nexport const { setProfile, setLogout } = loginSlice.actions;\r\n\r\nexport default loginSlice.reducer;\r\n","import { MouseEventHandler, ReactChild, ReactFragment, ReactPortal } from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = (props: { type: \"button\" | \"submit\" | \"reset\" | undefined; onClick: MouseEventHandler<HTMLButtonElement> | undefined; children: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; }) => {\r\n    return (\r\n        <button type={props.type} className=\"button\" onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport {\r\n\tGoogleLoginResponse,\r\n\tGoogleLoginResponseOffline,\r\n\tuseGoogleLogin,\r\n} from \"react-google-login\";\r\nimport { useAppDispatch } from \"../app/hooks\";\r\nimport { setProfile } from \"../features/login/loginSlice\";\r\nimport \"../components/LoginPage/LoginPage.css\";\r\n// refresh token\r\nimport { refreshTokenSetup } from \"./refreshTokenSetup\";\r\nimport Button from \"./UI/Button/Button\";\r\n\r\nconst clientId =\r\n\t\"201437708650-9ndfuhshviue7au27pa3e3me4vrqlhu5.apps.googleusercontent.com\";\r\n\r\nfunction LoginHooks() {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst onSuccess = (res: GoogleLoginResponse | GoogleLoginResponseOffline) => {\r\n\t\tconsole.log(\"Login Success: currentUser:\", (res as any).profileObj);\r\n\t\tdispatch(setProfile((res as any).profileObj));\r\n\t\trefreshTokenSetup(res);\r\n\t};\r\n\r\n\t/*const onFailure = (res) => { \r\n\t\tconsole.log(\"Login failed: res:\", res);\r\n\t};*/\r\n\r\n\tconst { signIn } = useGoogleLogin({\r\n\t\tonSuccess,\r\n\t\t//onFailure,\r\n\t\tclientId,\r\n\t\tisSignedIn: true,\r\n\t\taccessType: \"offline\",\r\n\t\t// responseType: 'code',\r\n\t\t// prompt: 'consent',\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Button type=\"submit\" onClick={signIn}>\r\n\t\t\t<div className=\"Login\">\r\n\t\t\t\t<span>Sign in with Google</span>\r\n\t\t\t</div>\r\n\t\t</Button>\r\n\t);\r\n}\r\n\r\nexport default LoginHooks;\r\n","export const refreshTokenSetup = (res: any) => {\r\n\tlet refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n\tconst refreshToken = async () => {\r\n\t\tconst newAuthRes = await res.reloadAuthResponse();\r\n\t\trefreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n\t\tconsole.log(\"newAuthRes:\", newAuthRes);\r\n\t\tconsole.log(\"newAuthToken\", newAuthRes.id_token);\r\n\t\tsetTimeout(refreshToken, refreshTiming);\r\n\t};\r\n\r\n\tsetTimeout(refreshToken, refreshTiming);\r\n};\r\n","import React from \"react\";\r\nimport { useGoogleLogout } from \"react-google-login\";\r\nimport Button from \"./UI/Button/Button\";\r\nimport \"../components/LoginPage/LoginPage.css\";\r\nimport { useAppDispatch } from \"../app/hooks\";\r\nimport { setLogout } from \"../features/login/loginSlice\";\r\nconst clientId =\r\n\t\"201437708650-9ndfuhshviue7au27pa3e3me4vrqlhu5.apps.googleusercontent.com\";\r\n\r\nfunction LogoutHooks() {\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst onLogoutSuccess = () => {\r\n\t\tconsole.log(\"Logged out Success\");\r\n\t\tdispatch(setLogout({}));\r\n\t};\r\n\r\n\tconst onFailure = () => {\r\n\t\tconsole.log(\"Handle failure cases\");\r\n\t};\r\n\r\n\tconst { signOut } = useGoogleLogout({\r\n\t\tclientId,\r\n\t\tonLogoutSuccess,\r\n\t\tonFailure,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\ttype=\"submit\"\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsignOut();\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div className=\"Logout\">\r\n\t\t\t\t<span>Sign out</span>\r\n\t\t\t</div>\r\n\t\t</Button>\r\n\t);\r\n}\r\n\r\nexport default LogoutHooks;\r\n","import { ReactElement, useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport Login from \"../../components/Login\";\r\nimport Logout from \"../../components/Logout\";\r\nimport { selectLogin } from \"../../features/login/loginSlice\";\r\nimport \"../LoginPage/LoginPage.css\";\r\n\r\nfunction LoginPage(): ReactElement {\r\n\tconst selector = useAppSelector(selectLogin);\r\n\tconst [status, setStatus] = useState(false);\r\n\tuseEffect(() => {\r\n\t\tsetStatus(selector.profile != undefined);\r\n\t}, [selector]);\r\n\tlet getStatus = () => {\r\n\t\tif (status) {\r\n\t\t\treturn \"Signed In\";\r\n\t\t} else {\r\n\t\t\treturn \"Signed Out\";\r\n\t\t}\r\n\t};\r\n\tlet SignedInAs = () => {\r\n\t\tif (selector.profile != undefined) {\r\n\t\t\treturn \"Signed in as: \" + selector.profile.name;\r\n\t\t} else {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t};\r\n\r\n\tlet getFirstName = () => {\r\n\t\tif (selector.profile != undefined) {\r\n\t\t\treturn selector.profile.name.substring(\r\n\t\t\t\t0,\r\n\t\t\t\tselector.profile.name.indexOf(\" \"),\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tlet statusMessage = () => {\r\n\t\tif (selector.profile != undefined) {\r\n\t\t\treturn \"Welcome back \" + getFirstName() + \"!\";\r\n\t\t} else {\r\n\t\t\treturn \"Please Sign in\";\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"StatusMessage\">{statusMessage()}</div>\r\n\t\t\t<div className=\"StatusBox\">\r\n\t\t\t\t<div className=\"Text\">Status: {getStatus()}</div>\r\n\t\t\t\t<div className=\"Text\">{SignedInAs()}</div>\r\n\t\t\t</div>\r\n\t\t\t<ul className=\"LoginMargin\">\r\n\t\t\t\t<Login />\r\n\t\t\t</ul>\r\n\t\t\t<ul className=\"LogoutMargin\">\r\n\t\t\t\t<Logout />\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LoginPage;\r\n","import Recipe from \"../../Interfaces-Classes/Recipe\";\r\n\r\nexport interface Query {\r\n\tsearchString: string;\r\n}\r\nexport default class SearchQuery {\r\n\tprivate _searchString: string;\r\n\r\n\tconstructor(query: Query) {\r\n\t\tthis._searchString = query.searchString.toLowerCase();\r\n\t}\r\n\t//Sees if recipe name ingidients or description contains the search term\r\n\tpublic basicSearch(recipes: Array<Recipe>): Array<Recipe> {\r\n\t\tlet results: Array<Recipe> = [];\r\n\t\trecipes.map((recipe) => {\r\n\t\t\tconsole.log(this._searchString);\r\n\t\t\tlet ingredientIncludes = false;\r\n\t\t\trecipe.ingredientList.map((ingredient) => {\r\n\t\t\t\tif (ingredient.toLowerCase().includes(this._searchString)) {\r\n\t\t\t\t\tingredientIncludes = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (\r\n\t\t\t\trecipe.name.toLowerCase().includes(this._searchString) ||\r\n\t\t\t\trecipe.description.toLowerCase().includes(this._searchString) ||\r\n\t\t\t\tingredientIncludes\r\n\t\t\t) {\r\n\t\t\t\tresults.push(recipe);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn results;\r\n\t}\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport Recipe from \"../../Interfaces-Classes/Recipe\";\r\nimport SearchQuery, { Query } from \"./SearchQuery\";\r\nimport \"./SearchBox.css\";\r\n\r\ninterface Props {\r\n\tsetResults: React.Dispatch<React.SetStateAction<Recipe[]>>;\r\n}\r\nconst recipes = [\r\n\tnew Recipe(\"Apple Pie\", \"It is very good takes like an hour to make\", [\r\n\t\t\"apple\",\r\n\t\t\"pie crust\",\r\n\t]),\r\n\tnew Recipe(\"Jeramisu\", \"Yummy Jeremy mmmmmm yummy\", [\"Jeremy\", \"yum powder\"]),\r\n\tnew Recipe(\"Pizzella\", \"yes\", [\r\n\t\t\"poptarts mostly\",\r\n\t\t\"Pizza\",\r\n\t\t\"A kiss from Marcello\",\r\n\t]),\r\n\tnew Recipe(\"Popkornrad\", \"Pop pop!\", [\r\n\t\t\"Konrad\",\r\n\t\t\"oil\",\r\n\t\t\"budder\",\r\n\t\t\"souls of the dead\",\r\n\t]),\r\n\tnew Recipe(\"Cooking with Simon\", \"ok\", [\"Cooking\", \"With\", \"Simon\"]),\r\n\tnew Recipe(\"CARS\", \"THE MASTERPIECE OF THE CENTURY\", [\r\n\t\t\"Ka-Chow!\",\r\n\t\t\"Focus. Speed. I am speed.\",\r\n\t\t\"Tow Mater. Average intelligence.\",\r\n\t]),\r\n\tnew Recipe(\"CanDees Cade\", \"Run.\", [\r\n\t\t\"Sugar\",\r\n\t\t\"Anger\",\r\n\t\t\"Red Food Coloring(blood)\",\r\n\t\t\"Santa\",\r\n\t]),\r\n];\r\nconst SearchBox = (props: Props) => {\r\n\tconst searchBox = useRef(null);\r\n\t//Gets value in input and clears it\r\n\tconst getSearchValue: (clear: boolean) => string = (clear: boolean) => {\r\n\t\tlet r = (searchBox.current as any).value;\r\n\t\tif (clear) {\r\n\t\t\t(searchBox.current as any).value = \"\";\r\n\t\t}\r\n\t\treturn r;\r\n\t};\r\n\tconst search = (clear: boolean) => {\r\n\t\tlet query: Query = {\r\n\t\t\tsearchString: getSearchValue(clear),\r\n\t\t};\r\n\t\tlet searchQ = new SearchQuery(query);\r\n\r\n\t\tprops.setResults(searchQ.basicSearch(recipes));\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"Title\">\r\n\t\t\t<h1>Search For Recipe</h1>\r\n\t\t\t<div className=\"Flex\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\tif (e.key === \"Enter\") {\r\n\t\t\t\t\t\t\tsearch(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//Search in realtime, probably wanna remove later on when search is more complex but for now it fancy\r\n\t\t\t\t\t\tsearch(false);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tref={searchBox}\r\n\t\t\t\t></input>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"SearchButton\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsearch(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tSearch\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport Recipe from \"../../Interfaces-Classes/Recipe\";\r\nimport \"./SaveRecipe.css\";\r\nimport calendarSlice, {\r\n\taddRecipeDate,\r\n\tCalendarState,\r\n\tRecipeDate,\r\n\tselectRecipeDates,\r\n} from \"./calendarSlice\";\r\n\r\ninterface Props {\r\n\trecipe: Recipe;\r\n}\r\n\r\nconst SaveRecipe = (props: Props) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst calendarr: Array<RecipeDate> = useAppSelector(selectRecipeDates);\r\n\tlet save = () => {\r\n\t\tlet month = prompt(\"Month (as name)\");\r\n\t\tlet day = prompt(\"Day(as number)\");\r\n\t\tlet date = new Date(month + \" \" + day + \", 2021\");\r\n\t\tdispatch(addRecipeDate({ date: date, recipe: props.recipe.serialize() }));\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={save} className=\"Save\">\r\n\t\t\t\tSave Recipe\r\n\t\t\t</button>\r\n\t\t\t{console.log(calendarr)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SaveRecipe;\r\n","import React, { CSSProperties, useState } from \"react\";\r\nimport Recipe from \"../../Interfaces-Classes/Recipe\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport SaveRecipe from \"./SaveRecipe\";\r\nimport \"./Search.css\";\r\ninterface Props {}\r\n//idrc enough to style this rn, its all gonna be remade anyway. enjoy funny flexbox\r\nconst style: CSSProperties = {\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"row\",\r\n};\r\nconst Search = (props: Props) => {\r\n\tconst [results, setResults] = useState<Recipe[]>([]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SearchBox setResults={setResults}></SearchBox>\r\n\t\t\t<ul>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t{/* <div className=\"SideBox\"></div> */}\r\n\t\t\t\t\t{results.map((result) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div style={style}>\r\n\t\t\t\t\t\t\t\t<div className=\"Font\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"Name\">{result.name}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{/* <ul>\r\n\t\t\t\t\t\t\t\t\t<div className=\"Description\">{result.description}</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t{result.ingredientList.map((ingredient) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <div>{ingredient}</div>;\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</ul> */}\r\n\t\t\t\t\t\t\t\t\t<div className=\"Description\">{result.description}</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t{result.ingredientList.map((ingredient) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <li className=\"Ingredient\">{ingredient}</li>;\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t<SaveRecipe recipe={result}></SaveRecipe>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import { RecipeDate } from \"../features/recipeSearch/calendarSlice\";\r\nimport Recipe from \"./Recipe\";\r\n\r\nexport interface Day {\r\n\tdate?: Date;\r\n\t//Eventually will be expanded into more complex data, for now strings work\r\n\tevents: Array<{ recipe: Recipe; note: string }>;\r\n\tholiday?: string;\r\n}\r\n//Converts a list of recipeDates into Days\r\nexport const convertToDays = (recipeDates: Array<RecipeDate>) => {\r\n\tlet days: Array<Day> = [];\r\n\trecipeDates.map((recipeDate) => {\r\n\t\tlet date = recipeDate.date;\r\n\t\tlet found = false;\r\n\t\tfor (let i = 0; i < days.length; i++) {\r\n\t\t\tif (days[i].date?.toDateString() === date.toDateString()) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\tdays[i].events.push({\r\n\t\t\t\t\trecipe: recipeDate.recipe,\r\n\t\t\t\t\tnote: \"TODO REMEBER OKAY!!\",\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!found) {\r\n\t\t\t//Add holiday stuff TODO\r\n\t\t\tdays.push({\r\n\t\t\t\tdate: recipeDate.date,\r\n\t\t\t\tevents: [{ recipe: recipeDate.recipe, note: \"TODO REMEBER OKAY!!\" }],\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\treturn days;\r\n};\r\n","import { ReactChild, ReactFragment, ReactPortal } from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props: { className: string; children: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; }) => {\r\n    const classes = 'card ' + props.className;\r\n\r\n    return (<div className={classes}>{props.children}</div>);\r\n}\r\n\r\nexport default Card;","import React, { useState } from \"react\";\r\nimport { Day } from \"../../Interfaces-Classes/Day\";\r\n\r\nimport \"./Calendar.css\";\r\n\r\ninterface Props {\r\n\tday: Day;\r\n}\r\nconst MONTHS = [\r\n\t\"January\",\r\n\t\"February\",\r\n\t\"March\",\r\n\t\"April\",\r\n\t\"May\",\r\n\t\"June\",\r\n\t\"July\",\r\n\t\"August\",\r\n\t\"September\",\r\n\t\"October\",\r\n\t\"November\",\r\n\t\"December\",\r\n];\r\n\r\nconst CalendarDay = (props: Props) => {\r\n\tconst monthNumToName: (num: number) => string = (num: number) => {\r\n\t\treturn MONTHS[num - 1];\r\n\t};\r\n\t//Value is the name, or eventually id for the event\r\n\tconst [overlayShown, setOverlayShown] = useState(\"\");\r\n\tlet renderOverlay = () => {\r\n\t\tfor (let i = 0; i < props.day.events.length; i++) {\r\n\t\t\tlet event = props.day.events[i];\r\n\t\t\tif (event.recipe.name == overlayShown) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"recipeOverlayText\">\r\n\t\t\t\t\t\t<h1>{event.recipe.name}</h1>\r\n\t\t\t\t\t\t<p>Note: {event.note}</p>\r\n\t\t\t\t\t\t<p>{event.recipe.description}</p>\r\n\t\t\t\t\t\t<div className=\"ingrdientItem\">\r\n\t\t\t\t\t\t\t{event.recipe.ingredientList.map((ingredient) => {\r\n\t\t\t\t\t\t\t\treturn <li>{ingredient}</li>;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<td>\r\n\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t{/* <li>{monthNumToName(props.day.month)}</li> */}\r\n\t\t\t\t\t<div>{props.day.date?.getDate()}</div>\r\n\t\t\t\t\t<div className=\"notes\">\r\n\t\t\t\t\t\t{props.day.events.map((event) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t//Or whatever should be the id\r\n\t\t\t\t\t\t\t\t\t\tsetOverlayShown(event.recipe.name);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{event.recipe.name}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{overlayShown && (\r\n\t\t\t\t\t<div className=\"calendarOverlay\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"close\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetOverlayShown(\"\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tX\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{renderOverlay()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</td>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default CalendarDay;\r\n","import './MonthsFilter.css'\r\n\r\nconst MonthsFilter = (props: { onFilterMonth: (arg0: any) => void; }) => {\r\n\r\n    const filterChangeHandler = (event: { target: { value: any; }; }) => {\r\n        props.onFilterMonth(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='months-filter'>\r\n            <div className='months-filter__control'>\r\n                <label>Filter by month</label>\r\n                <select onChange={filterChangeHandler} defaultValue={new Date().getMonth().toString()} autoFocus>\r\n                    <option value='0'>January</option>\r\n                    <option value='1'>February</option>\r\n                    <option value='2'>March</option>\r\n                    <option value='3'>April</option>\r\n                    <option value='4'>May</option>\r\n                    <option value='5'>June</option>\r\n                    <option value='6'>July</option>\r\n                    <option value='7'>August</option>\r\n                    <option value='8'>September</option>\r\n                    <option value='9'>October</option>\r\n                    <option value='10'>November</option>\r\n                    <option value='11'>December</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MonthsFilter\r\n","import { useEffect, useState } from \"react\";\r\nimport { convertToDays, Day } from \"./../../Interfaces-Classes/Day\";\r\nimport Card from \"../UI/Card/Card\";\r\nimport CalendarDate from \"./CalendarDay\";\r\nimport MonthsFilter from \"./MonthsFilter/MonthsFilter\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport \"./Calendar.css\";\r\nimport Recipe from \"../../Interfaces-Classes/Recipe\";\r\nimport {\r\n\taddRecipeDate,\r\n\tRecipeDate,\r\n\tselectRecipeDates,\r\n} from \"../../features/recipeSearch/calendarSlice\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\n\r\ninterface Props {}\r\n\r\nconst year = new Date().getFullYear();\r\n\r\nconst testLeapYear = (year: number) => {\r\n\tif (year % 4 === 0) {\r\n\t\tif (year % 100 === 0 && year % 400 !== 0) {\r\n\t\t\treturn 28;\r\n\t\t}\r\n\t\treturn 29;\r\n\t}\r\n\treturn 28;\r\n};\r\n\r\nconst MONTHS = [\r\n\t\"January\",\r\n\t\"February\",\r\n\t\"March\",\r\n\t\"April\",\r\n\t\"May\",\r\n\t\"June\",\r\n\t\"July\",\r\n\t\"August\",\r\n\t\"September\",\r\n\t\"October\",\r\n\t\"November\",\r\n\t\"December\",\r\n];\r\n\r\nconst MONTHSIZE = [\r\n\t31,\r\n\ttestLeapYear(year),\r\n\t31,\r\n\t30,\r\n\t31,\r\n\t30,\r\n\t31,\r\n\t31,\r\n\t30,\r\n\t31,\r\n\t30,\r\n\t31,\r\n];\r\n\r\nlet MONTH = new Date().getMonth();\r\n\r\nconst daysPre: Day[] = [];\r\n\r\nconst Calendar = (props: Props) => {\r\n\t//eslint-disable-next-line\r\n\tconst [month, setMonth] = useState(MONTH);\r\n\tlet recipeDateList = useAppSelector(selectRecipeDates);\r\n\t//convert to recipeDates into days\r\n\tlet days = convertToDays(recipeDateList);\r\n\t// not sure how to use this hook as a fix to the rendering bug\r\n\tuseEffect(() => {\r\n\t\tdays = convertToDays(recipeDateList);\r\n\t\t//console.log(generateRows(7));\r\n\t\treturn;\r\n\t}, [recipeDateList]);\r\n\r\n\tconst filterMonthHandler = (selectedMonth: number) => {\r\n\t\tsetMonth(selectedMonth);\r\n\t};\r\n\r\n\tconst generateRows: (weekLength: number) => Array<Array<Day>> = (\r\n\t\tweekLength: number = 7,\r\n\t) => {\r\n\t\t// console.log(mth + ' ' + month)\r\n\r\n\t\t// recieves a number representing the day of the month, and searches through the state\r\n\t\t// for a day object on that day of MONTH. Returns the found day object\r\n\t\tconst checkDay = (day: number) => {\r\n\t\t\t// console.log(days)\r\n\t\t\t// console.log(day+1 + ' ' + mth)\r\n\r\n\t\t\t/**/\r\n\r\n\t\t\treturn days.find(\r\n\t\t\t\t(d) =>\r\n\t\t\t\t\td.date && d.date.getDate() - 1 === day && d.date.getMonth() == month,\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\t// recieves a Date and returns the a Day object on that Date with no events\r\n\t\tconst genDayObj = (date: Date) => {\r\n\t\t\tconst dayObj: {\r\n\t\t\t\tdate: Date;\r\n\t\t\t\tevents: Array<{ recipe: Recipe; note: string }>;\r\n\t\t\t} = {\r\n\t\t\t\tdate: new Date(date),\r\n\t\t\t\tevents: [],\r\n\t\t\t};\r\n\t\t\treturn dayObj;\r\n\t\t};\r\n\r\n\t\t// returns a Day object with no Date and an empty events array\r\n\t\tconst genEmptyDayObj: () => Day = () => {\r\n\t\t\tconst dayObj: {\r\n\t\t\t\tdate?: Date;\r\n\t\t\t\tevents: Array<{ recipe: Recipe; note: string }>;\r\n\t\t\t} = {\r\n\t\t\t\tevents: [],\r\n\t\t\t};\r\n\t\t\treturn dayObj;\r\n\t\t};\r\n\r\n\t\t// Initialize an empty array of days to be populated with Day objects representing the days of MONTH\r\n\t\tconst dayObjArr: Array<Day> = [];\r\n\r\n\t\t// Initialize a reference date set to the first day of the MONTH\r\n\t\tconst refDate: Date = new Date();\r\n\t\trefDate.setMonth(month);\r\n\t\trefDate.setDate(1);\r\n\r\n\t\t// refDate.getDay() is the day of the week that the first day of the MONTH starts on.\r\n\t\t// if the month starts on a day other than sunday, this loops through and fills up to that point with empty Day objects\r\n\t\tfor (let j: number = 0; j < refDate.getDay(); j++) {\r\n\t\t\tconst overflowDate = new Date();\r\n\t\t\toverflowDate.setDate(refDate.getDate() - refDate.getDay());\r\n\t\t\tdayObjArr.push(genEmptyDayObj());\r\n\t\t}\r\n\r\n\t\t// loops through every day of the month. testDate is initialized as a Date object on the same day as refDate (first of the MONTH)\r\n\t\tconst testDate: Date = new Date(refDate);\r\n\t\tfor (let i: number = 0; i < MONTHSIZE[month]; i++) {\r\n\t\t\t// sets dayObj equal to the Day associated with 'i' day of MONTH. (if 'i' is 0, searches for a Day representing the first day of the MONTH)\r\n\t\t\tlet dayObj: Day | undefined = checkDay(i);\r\n\t\t\tconsole.log(dayObj);\r\n\t\t\t// if no Day is found, set testDate to the Date associated with this value of 'i', and generate a Day object with no events using testDate\r\n\t\t\tif (dayObj === undefined) {\r\n\t\t\t\ttestDate.setDate(i + 1);\r\n\t\t\t\tdayObj = genDayObj(testDate);\r\n\t\t\t}\r\n\t\t\tdayObjArr.push(dayObj);\r\n\t\t}\r\n\r\n\t\t// slice dayObjArr into 7 element long mini arrays and add to 2d array \"weeks\"\r\n\t\tconst weeks: Array<Array<Day>> = [];\r\n\t\tfor (let o: number = 0; o < dayObjArr.length / 7; o++) {\r\n\t\t\tweeks.push(dayObjArr.slice(0 + 7 * o, 7 + 7 * o));\r\n\t\t}\r\n\t\t//fill final week with empty days\r\n\t\tconst finalWeek = weeks[weeks.length - 1];\r\n\t\tconst finalElement = finalWeek[finalWeek.length - 1];\r\n\t\tfinalWeek.length = 7;\r\n\t\tfinalWeek.fill(genEmptyDayObj(), finalWeek.indexOf(finalElement) + 1, 6);\r\n\r\n\t\treturn weeks;\r\n\t};\r\n\treturn (\r\n\t\t<Card className=\"card\">\r\n\t\t\t<Card className=\"drop\">\r\n\t\t\t\t<MonthsFilter onFilterMonth={filterMonthHandler} />\r\n\t\t\t</Card>\r\n\t\t\t<table>\r\n\t\t\t\t<caption>{MONTHS[month]}</caption>\r\n\t\t\t\t<colgroup>\r\n\t\t\t\t\t<col className=\"weekend\" />\r\n\t\t\t\t\t<col className=\"weekday\" span={5} />\r\n\t\t\t\t\t<col className=\"weekend\" />\r\n\t\t\t\t</colgroup>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr id=\"days\">\r\n\t\t\t\t\t\t<th>Sun</th>\r\n\t\t\t\t\t\t<th>Mon</th>\r\n\t\t\t\t\t\t<th>Tue</th>\r\n\t\t\t\t\t\t<th>Wed</th>\r\n\t\t\t\t\t\t<th>Thu</th>\r\n\t\t\t\t\t\t<th>Fri</th>\r\n\t\t\t\t\t\t<th>Sat</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{generateRows(7).map((row, i) => {\r\n\t\t\t\t\t\t//console.log(row);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr key={uuidv4()}>\r\n\t\t\t\t\t\t\t\t{row.map((day, j) => {\r\n\t\t\t\t\t\t\t\t\t//console.log(day);\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<CalendarDate\r\n\t\t\t\t\t\t\t\t\t\t\tkey={uuidv4()}\r\n\t\t\t\t\t\t\t\t\t\t\tday={day as Day}\r\n\t\t\t\t\t\t\t\t\t\t></CalendarDate>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Calendar;\r\n","//import React, { CSSProperties } from \"react\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport \"./App.css\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport LoginPage from \"./components/LoginPage/LoginPage\";\r\nimport Search from \"./features/recipeSearch/Search\";\r\nimport Calendar from \"./components/Calendar/Calendar\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<body>\r\n\t\t\t<div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/LoginPage\" component={LoginPage} />\r\n\t\t\t\t\t\t<Route path=\"/Search\" component={Search} />\r\n\t\t\t\t\t\t<Route path=\"/Calendar\" component={Calendar} />\r\n\r\n\t\t\t\t\t\t<ul style={{ listStyle: \"none\" }}></ul>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t</body>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\n//import counterReducer from '../features/counter/counterSlice';\r\nimport loginReducer from \"../features/login/loginSlice\";\r\nimport calendarSlice from \"../features/recipeSearch/calendarSlice\";\r\n\r\nexport const store = configureStore({\r\n\treducer: {\r\n\t\tlogin: loginReducer,\r\n\t\tcalendar: calendarSlice,\r\n\t},\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n\tReturnType,\r\n\tRootState,\r\n\tunknown,\r\n\tAction<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<App />\r\n\t\t\t</Provider>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}